var O=Object.defineProperty;var R=(i,n,l)=>n in i?O(i,n,{enumerable:!0,configurable:!0,writable:!0,value:l}):i[n]=l;var d=(i,n,l)=>(R(i,typeof n!="symbol"?n+"":n,l),l);(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))u(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&u(c)}).observe(document,{childList:!0,subtree:!0});function l(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function u(t){if(t.ep)return;t.ep=!0;const r=l(t);fetch(t.href,r)}})();/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */let f,y;const g="https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_10m_airports.geojson";function I(){const i=51.4709959,n=-.4531566,l=2,u=0,t=0,r=document.getElementById("map");f=new google.maps.Map(r,{zoom:l,center:new google.maps.LatLng(i,n),heading:u,tilt:t,mapId:"b1beacae401d047c"});const c=document.getElementById("tooltip");function v({x:p,y:h,object:e}){e?(c.style.display="block",c.style.left=`${p+5}px`,c.style.top=`${h+5}px`,c.innerHTML=`${e.properties.name} - ${e.properties.abbrev}`):c.style.display="none"}const m={click:null,dblclick:null,mousemove:null,mouseout:null};class L extends google.maps.WebGLOverlayView{constructor(e,a,s={}){super();d(this,"canvas");d(this,"deck");d(this,"layers_");d(this,"props");this.deck=null,this.layers_=a,this.props=s,this.canvas=e}set layers(e){this.layers_=e,this.deck.setProps({layers:[this.layers_]})}onAdd(){}onRemove(){}onContextRestored({gl:e}){const a=this.getMap();this.deck=new deck.Deck({canvas:this.canvas,initialViewState:{longitude:n,latitude:i,pitch:t,zoom:l},gl:e,layers:this.layers_,props:this.props,controller:!1,userData:{map:a}});for(const s in m)m[s]=a.addListener(s,o=>this.handleMouseEvent(this.deck,s,o))}onDraw({gl:e,transformer:a}){const s=this.deck;if(!s||!s.layerManager)return;const o=a.getCameraParams(),E=this.canvas.clientWidth,P=this.canvas.clientHeight,_=0,k=0,M=Math.max(0,o.zoom-1),C=o.tilt,T=o.heading,S=o.center.lat,x=o.center.lng;this.canvas.style.left=`${_}px`,this.canvas.style.top=`${k}px`,s.setProps({width:E,height:P,viewState:{latitude:S,longitude:x,zoom:M,pitch:C,bearing:T,nearZMultiplier:.01,farZMultiplier:1.01,repeat:!0}}),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.enable(e.DEPTH_TEST),e.disable(e.CULL_FACE),e.depthFunc(e.LEQUAL),e.depthMask(!0),this.requestRedraw(),s._drawLayers("google-map-repaint",{clearCanvas:!1})}onContextLost(){}getEventPixel(e,a){const s=a.getViewports()[0].project([e.latLng.lng(),e.latLng.lat()]);return{x:s[0],y:s[1]}}handleMouseEvent(e,a,s){const o={type:a,offsetCenter:this.getEventPixel(s,e),srcEvent:s};switch(a){case"click":e._lastPointerDownInfo=e.pickObject(o.offsetCenter),o.tapCount=1,e._onEvent(o);break;case"dblclick":o.type="click",o.tapCount=2,e._onEvent(o);break;case"mousemove":o.type="pointermove",e._onPointerMove(o);break;case"mouseout":o.type="pointerleave",e._onPointerMove(o);break;default:return}this.requestRedraw()}}const b=[new deck.GeoJsonLayer({id:"airports",data:g,filled:!0,pointRadiusMinPixels:2,opacity:1,pointRadiusScale:2e3,getRadius:p=>11-p.properties.scalerank,getFillColor:[200,0,80,180],pickable:!0,autoHighlight:!0,onHover:v}),new deck.ArcLayer({id:"arcs",data:g,dataTransform:p=>p.features.filter(h=>h.properties.scalerank<4),getSourcePosition:p=>[n,i],getTargetPosition:p=>p.geometry.coordinates,getSourceColor:[0,128,200],getTargetColor:[200,0,80],getWidth:1})],w={};y=new L(r,b,w),y.setMap(f)}window.initMap=I;
