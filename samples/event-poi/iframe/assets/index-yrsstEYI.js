var d=Object.defineProperty;var l=(n,e,i)=>e in n?d(n,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):n[e]=i;var s=(n,e,i)=>(l(n,typeof e!="symbol"?e+"":e,i),i);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))t(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&t(c)}).observe(document,{childList:!0,subtree:!0});function i(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function t(o){if(o.ep)return;o.ep=!0;const r=i(o);fetch(o.href,r)}})();/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */function a(){const n={lat:-33.871,lng:151.197},e=new google.maps.Map(document.getElementById("map"),{zoom:18,center:n});new u(e,n)}function f(n){return"placeId"in n}class u{constructor(e,i){s(this,"origin");s(this,"map");s(this,"directionsService");s(this,"directionsRenderer");s(this,"placesService");s(this,"infowindow");s(this,"infowindowContent");this.origin=i,this.map=e,this.directionsService=new google.maps.DirectionsService,this.directionsRenderer=new google.maps.DirectionsRenderer,this.directionsRenderer.setMap(e),this.placesService=new google.maps.places.PlacesService(e),this.infowindow=new google.maps.InfoWindow,this.infowindowContent=document.getElementById("infowindow-content"),this.infowindow.setContent(this.infowindowContent),this.map.addListener("click",this.handleClick.bind(this))}handleClick(e){console.log("You clicked on: "+e.latLng),f(e)&&(console.log("You clicked on place:"+e.placeId),e.stop(),e.placeId&&(this.calculateAndDisplayRoute(e.placeId),this.getPlaceInformation(e.placeId)))}calculateAndDisplayRoute(e){const i=this;this.directionsService.route({origin:this.origin,destination:{placeId:e},travelMode:google.maps.TravelMode.WALKING}).then(t=>{i.directionsRenderer.setDirections(t)}).catch(t=>window.alert("Directions request failed due to "+status))}getPlaceInformation(e){const i=this;this.placesService.getDetails({placeId:e},(t,o)=>{o==="OK"&&t&&t.geometry&&t.geometry.location&&(i.infowindow.close(),i.infowindow.setPosition(t.geometry.location),i.infowindowContent.children["place-icon"].src=t.icon,i.infowindowContent.children["place-name"].textContent=t.name,i.infowindowContent.children["place-id"].textContent=t.place_id,i.infowindowContent.children["place-address"].textContent=t.formatted_address,i.infowindow.open(i.map))})}}window.initMap=a;
